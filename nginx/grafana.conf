map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# Upstreams
upstream grafana {
    server 127.0.0.1:3000;
}

# HTTP Server
server {
  listen 80;
  server_name monitor.example.com;
  return 301 https://$server_name$request_uri;
}

# HTTPS Server
server {
    listen 443 ssl;
    server_name monitor.example.com;

    # You can increase the limit if your need to.
    client_max_body_size 200M;

    error_log /var/log/nginx/monitor.error.log;
    access_log /var/log/nginx/monitor.access.log;

    #auth_basic "Restricted Access";
    #auth_basic_user_file /etc/nginx/.htpasswd;

    #ssl on;
    ssl_certificate /etc/letsencrypt/live/monitor.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/monitor.example.com/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # donâ€™t use SSLv3 ref: POODLE

    location / {
        proxy_pass http://grafana;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Nginx-Proxy true;

        proxy_redirect off;
    }
    # Proxy Grafana Live WebSocket connections.
    location /grafana/api/live/ {
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection $connection_upgrade;
	proxy_set_header Host $host;
        proxy_pass http://grafana;
    }
}
